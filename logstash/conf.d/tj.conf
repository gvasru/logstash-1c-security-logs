input {
   file {
        codec => multiline {
              pattern => "^\d{2}:\d{2}.\d{6}-\d{1,},\w{2,10},\d{1,},"
              what  => "previous"
              negate => true
              max_lines => 3000
            }
            path => ["C:/v8/**/*.log"]
            sincedb_path => "config/xxx.sincedb"
            start_position => "beginning"
             type => "RAT"
        }
}
filter {
  # Не нужные "стандартные" поля
  mutate {
    remove_field => [ "host", "@version", "@timestamp" ]
    rename => [ "type", "host" ]
    add_field => { "host" => "RAT" }
  }
  grok {
    match => [ "message", "%{BASE10NUM:m}:%{NUMBER:s}-(?<duration>\d{1,}),%{WORD:event},(?<s3>\d{1,}),%{GREEDYDATA:message}"]
    overwrite => [ "message" ]
    #match => [ "message", "%{NUMBER:m}:%{NUMBER:s}-%{NUMBER:x1},%{WORD:evt},%{NUMBER:x2},%{WORD:allother}"]
  }
  if "_grokparsefailure" not in [tags]  {
    #имя файла лога
    ruby {
      code => "
          event.set('raw_log_file',event.get('path').split('/')[-1].gsub('.log','').slice(0..7))
          event.set('raw_log_folder',event.get('path').split('/')[-2])
          event.set('processType',event.get('raw_log_folder').split('_')[0])
          event.set('header',event.get('m')+':'+event.get('s').to_s+'')
      "
    }
    #Парсниг лога 
    ruby {
      path => "config/parsetj.rb"
      script_params => { "messagefield" => "message" }
    }
    ruby {
      code => "
      f=event.get('raw_log_file')
      event.set('dt','20'+f[0,2]+'-'+f[2,2]+'-'+f[4,2]+' '+f[6,2]+':'+event.get('m').to_s+':'+event.get('s').to_s[0,2]+'.'+event.get('s').to_s[3,3])  
      "
    }
    date {
        match => [ "dt", 'yyyy-MM-dd HH:mm:ss.SSS' ] #SSS
    }
    if "_dateparsefailure" not in [tags]  {
        mutate {
        remove_field => [ "m", "s" , "dt" ]
        }
    }
  }
} 

output {
  if "_grokparsefailure"  in [tags] or "_rubyexception"  in [tags] 
    or "_dateparsefailure"  in [tags] {
     
    stdout { codec => rubydebug }
  }
  else{
     elasticsearch {
      hosts => ["127.0.0.1:9200"]
      manage_template => true
      template_overwrite => true
      template_name => "1cv8tg"
      template => "config/1Cv8TJ.json"
      index => "1cv8tg-srvname-%{raw_log_folder}"
      action => "create"
  }
  }
}